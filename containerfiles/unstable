FROM quay.io/fedora/fedora-bootc:42-aarch64

# Force dnf5
RUN rm -f /usr/bin/dnf && ln -s /usr/bin/dnf5 /usr/bin/dnf

# Copy over custom repository files
COPY rootfs/etc/yum.repos.d/*.repo /etc/yum.repos.d/

RUN cat /usr/lib/os-release
ENV CMD_INSTALL="dnf install -y --setopt=install_weak_deps=false --setopt=max_parallel_downloads=10"

RUN ${CMD_INSTALL} distribution-gpg-keys

# Install custom kernel version
RUN  dnf remove  -y kernel kernel-core kernel-devel kernel-devel-matched kernel-headers kernel-modules kernel-modules-core kernel-modules-extra && dnf install -y \
    kernel-6.14.0-63.fc42 \
    kernel-core-6.14.0-63.fc42 \
    kernel-devel-6.14.0-63.fc42 \
    kernel-devel-matched-6.14.0-63.fc42 \
    kernel-headers-6.14.0-63.fc42 \
    kernel-modules-6.14.0-63.fc42 \
    kernel-modules-core-6.14.0-63.fc42 \
    kernel-modules-extra-6.14.0-63.fc42

# Prevent kernel upgrades
RUN dnf versionlock add kernel kernel-core kernel-devel kernel-devel-matched kernel-headers kernel-modules

# Remove qemu packages
RUN dnf remove -y qemu-user-static-*

RUN ${CMD_INSTALL} \
  alsa-sof-firmware \
  alsa-ucm \
  alsa-utils \
  atheros-firmware \
  bc \
  binutils \
  bluez \
  brcmfmac-firmware \
  btop \
  cabextract \
  cirrus-audio-firmware \
  crudini \
  dbus-daemon \
  distrobox \
  dracut-config-generic \
  evtest \
  flatpak \
  gamescope-session-playtron \
  glibc-langpack-en \
  gstreamer1-plugins-good \
  htop \
  inputplumber \
  intel-audio-firmware \
  iotop \
  iwlegacy-firmware \
  iwlwifi-dvm-firmware \
  iwlwifi-mvm-firmware \
  langpacks-en \
  legendary \
  #libpact \
  #libplaytron \
  libertas-firmware \
  linuxconsoletools \
  lsb_release \
  mangohud \
  mesa-vulkan-drivers \
  mt7xxx-firmware \
  NetworkManager-bluetooth \
  NetworkManager-wifi \
  nxpwireless-firmware \
  ostree-grub2 \
  p7zip-plugins \
  pipewire \
  pipewire-alsa \
  pipewire-gstreamer \
  pipewire-pulseaudio \
  pipewire-utils \
  playserve \
  playtron-os-files \
  playtron-plugin-local \
  playview \
  plymouth \
  plymouth-theme-spinner \
  powerstation \
  powertop \
  realtek-firmware \
  sddm \
  SteamBus \
  switcheroo-control \
  time \
  tiwilink-firmware \
  tree \
  tzupdate \
  udev-media-automount \
  udisks2 \
  unrar \
  unzip \
  usbutils \
  usb_modeswitch \
  vim \
  webkit2gtk4.1 \
  weston-session \
  wget \
  wireplumber \
  xdg-desktop-portal-openuri \
  xdg-user-dirs \
  xdg-utils \
  xorg-x11-server-Xvfb \
  xwininfo \
  zenity

# Install Arm specific packages
RUN ${CMD_INSTALL} \
  box64-a9f4e72c4b4f15289c8eef0b9be0359e2acf50dc \
  box64-binfmts-a9f4e72c4b4f15289c8eef0b9be0359e2acf50dc \
  box64-data-a9f4e72c4b4f15289c8eef0b9be0359e2acf50dc \
  dnf-utils \
  ibus-libs \
  libnsl \
  patch \
  qcom-firmware

# Force install x86 Steam
RUN rpm -Uvh --nodeps --ignorearch $(repoquery --location steam.i686)

# Copy/override files
COPY rootfs/etc/hostname /etc/
COPY rootfs/usr/lib/bootupd/grub2-static/grub-static-post.cfg /usr/lib/bootupd/grub2-static/
## Fix OS updates failing to extract due to bad locale setting
COPY rootfs/etc/locale.conf /etc/
COPY rootfs/etc/bluetooth/main.conf /etc/bluetooth/
COPY rootfs/usr/lib/os-release-playtron /usr/lib/
COPY rootfs/usr/share/plymouth/themes/spinner/watermark.png /usr/share/plymouth/themes/spinner/
COPY rootfs/usr/lib/bootc/kargs.d/50-playtron.toml /usr/lib/bootc/kargs.d/
## Fix audio crackling on the Steam Deck OLED by using a slower polling rate
COPY rootfs/usr/share/pipewire/pipewire-pulse.conf /usr/share/pipewire/

# Patch grub to fix update failures
COPY rootfs/grub-bootc.patch /
RUN patch /usr/sbin/grub2-mkconfig /grub-bootc.patch
RUN rm /usr/sbin/grub2-mkconfig.orig
RUN rm /grub-bootc.patch

# Set SELinux to permissive mode
RUN sed -i s'/SELINUX=.*/SELINUX=permissive/'g /etc/selinux/config

# Disable SPDIF/IEC958 audio output
RUN sed -e '/\[Mapping iec958/,+5 s/^/#/' -i '/usr/share/alsa-card-profile/mixer/profile-sets/default.conf'

# Ensure services are enabled according to presets
RUN systemctl preset-all
RUN systemctl --user --global preset-all

# Set graphical boot target
RUN cd /usr/lib/systemd/system && rm default.target && ln -s graphical.target default.target

# Build initramfs
RUN KERNEL=$(echo /lib/modules/*/vmlinuz | cut -d'/' -f4) \
  && dracut --reproducible -v --omit-drivers nouveau --add 'ostree' -f --no-hostonly --kver ${KERNEL} /lib/modules/${KERNEL}/initramfs.img

# Clear /var/run
RUN rm -rf /var/run
RUN ln -s /run /var/run

# Clear cache.
RUN dnf5 clean all && \
  rm -r -f \
    /boot/.vmlinuz*.hmac \
    /var/cache/*

# View final packages
RUN rpm -qa | sort --ignore-case

# View how well we adhere to bootc best practices.
RUN bootc container lint
